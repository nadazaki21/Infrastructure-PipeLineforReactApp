Description: 
   InfraStructure for hosting the web application 

Parameters:


    VPCCIDR:
      Description: Please enter the IP range (CIDR notation) for this
      Type: String
      Default: 10.0.0.0/16
    

    PubSubnetCIDR1:
      Description: public subnet cidr block
      Type: String
    
    PubSubnetCIDR2:
      Description: public subnet cidr block
      Type: String


    AZ1:
      Description: AZ subnet  1
      Type: String

    AZ2:
      Description: AZ subnet 2
      Type: String

  

Resources:

  MainVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: "Main VPC"



  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Ref AZ1
      CidrBlock: !Ref PubSubnetCIDR1
      MapPublicIpOnLaunch: true
      VpcId: !Ref MainVPC  
      Tags: 
        - Key: Name
          Value:  Public Subnet1

  

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Ref AZ2
      CidrBlock: !Ref PubSubnetCIDR2
      MapPublicIpOnLaunch: true
      VpcId: !Ref MainVPC  
      Tags: 
        - Key: Name
          Value: Public Subnet2 
          

  InternetGW:
    Type: AWS::EC2::InternetGateway

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGW  

  
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref MainVPC  

 

  PublicInternetOutboundRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway #If you create a route that references an Internet Gateway in the same template where you create the Internet Gateway, you must declare a dependency on the Internet Gateway attachment.
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGW
        
  
        

  AssociatePUBLIC1toRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  
  AssociatePUBLIC2toRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2



  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allowing web requests and ssh connection with my public ip 
      VpcId: !Ref MainVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # you can limit shh connection to your own public ip only 
        - IpProtocol: tcp
          FromPort: 9090   # For prometheus 
          ToPort: 9090
          CidrIp: 0.0.0.0/0 
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0    
  

  MonitoringSeversSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allowing web requests and ssh connection with my public ip 
      VpcId: !Ref MainVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # you can limit shh connection to your own public ip only 
        - IpProtocol: tcp
          FromPort: 9090   # For prometheus 
          ToPort: 9090
          CidrIp: 0.0.0.0/0 
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0   

 
Outputs:

  VPC:
    Description: VPC ID
    Value: !Ref MainVPC
    Export:
      Name: "VPC"

  PublicSubnet1:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet1
    Export:
      Name: "Public-Subnet1"

  PublicSubnet2:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet2
    Export:
      Name: "Public-Subnet2"

 
  EC2Security:
    Description: Instances security rules 
    Value: !Ref InstanceSecurityGroup
    Export:
      Name:  "InstanceSecurityGroup"

  MonitoringSerevrsSecurity:
    Description:  MOnitoring Instances security rules 
    Value: !Ref MonitoringSeversSecurityGroup
    Export:
      Name:  "MonitoringSeversSecurityGroup"

  




